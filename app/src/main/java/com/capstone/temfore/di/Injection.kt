package com.capstone.temfore.diimport android.content.Contextimport com.capstone.temfore.data.RecommendationRepositoryimport com.capstone.temfore.data.UserRepositoryimport com.capstone.temfore.data.local.room.FavoriteDatabaseimport com.capstone.temfore.data.pref.UserPreferenceimport com.capstone.temfore.data.pref.dataStoreimport com.capstone.temfore.data.remote.retrofit.ApiConfigimport com.capstone.temfore.utils.AppExecutorsobject Injection {    fun provideRepository(context: Context): UserRepository {        val pref = UserPreference.getInstance(context.dataStore)        return UserRepository.getInstance(pref)    }    fun provideRecRepository(context: Context): RecommendationRepository {        val apiService = ApiConfig.getApiService()        val database = FavoriteDatabase.getInstance(context)        val dao = database.favoriteDao()        val appExecutors = AppExecutors()        return RecommendationRepository.getInstance(apiService, dao, appExecutors)    }}