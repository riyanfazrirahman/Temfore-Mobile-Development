package com.capstone.temfore.ui.favoriteimport android.content.Contextimport androidx.lifecycle.ViewModelimport androidx.lifecycle.ViewModelProviderimport com.capstone.temfore.data.RecommendationRepositoryimport com.capstone.temfore.di.Injectionclass FavoriteViewModelFactory private constructor(private val eventsRepository: RecommendationRepository) :    ViewModelProvider.NewInstanceFactory() {    @Suppress("UNCHECKED_CAST")    override fun <T : ViewModel> create(modelClass: Class<T>): T {        if (modelClass.isAssignableFrom(FavoriteViewModel::class.java)) {            return FavoriteViewModel(eventsRepository) as T        }        throw IllegalArgumentException("Unknown ViewModel class: " + modelClass.name)    }    companion object {        @Volatile        private var instance: FavoriteViewModelFactory? = null        fun getInstance(context: Context): FavoriteViewModelFactory =            instance ?: synchronized(this) {                instance ?: FavoriteViewModelFactory(Injection.provideRecRepository(context))            }.also { instance = it }    }}