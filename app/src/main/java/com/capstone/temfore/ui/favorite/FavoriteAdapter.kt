package com.capstone.temfore.ui.favoriteimport android.content.Intentimport android.util.Logimport android.view.LayoutInflaterimport android.view.ViewGroupimport android.widget.Toastimport androidx.core.content.ContextCompatimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport com.bumptech.glide.Glideimport com.bumptech.glide.request.RequestOptionsimport com.capstone.temfore.Rimport com.capstone.temfore.data.local.entity.FavoriteFoodimport com.capstone.temfore.databinding.ItemFavoriteBindingimport com.capstone.temfore.ui.detail.DetailActivityimport com.capstone.temfore.utils.TextFormatclass FavoriteAdapter(private val onFavoriteClick: (FavoriteFood) -> Unit) : ListAdapter<FavoriteFood, FavoriteAdapter.MyViewHolder>(DIFF_CALLBACK) {    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder {        val binding = ItemFavoriteBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return MyViewHolder(binding)    }    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {        val food = getItem(position)        holder.bind(food)        val ivBookmark = holder.binding.ivAddFavorite        if (food != null) {            ivBookmark.setImageDrawable(ContextCompat.getDrawable(ivBookmark.context, R.drawable.ic_baseline_favorite_24))        } else {            ivBookmark.setImageDrawable(ContextCompat.getDrawable(ivBookmark.context, R.drawable.ic_favorite_border_24dp))        }        ivBookmark.setOnClickListener {            onFavoriteClick(food)        }    }    class MyViewHolder(val binding: ItemFavoriteBinding) : RecyclerView.ViewHolder(binding.root) {        fun bind(food: FavoriteFood) {            binding.tvTitle.text = food.foodTitle            binding.tvFoodTemp.text = TextFormat.formatTemperatureMessage(food.foodTemp)            binding.tvFoodType.text = TextFormat.formatType(food.foodType)            val imgCategory = TextFormat.getCategoryImage(food.foodCategory)            Glide.with(binding.foodCategory.context)                .load(imgCategory)                .into(binding.foodCategory)            Glide.with(itemView.context)                .load(food.foodImage)                .apply(RequestOptions.placeholderOf(R.drawable.ic_loading).error(R.drawable.ic_error))                .into(binding.ivFoodImage)            itemView.setOnClickListener {                val context = binding.root.context                val intent = Intent(context, DetailActivity::class.java)                intent.putExtra("FOOD_ID", food.foodId)                context.startActivity(intent)                Log.d("FavoriteAdapter", "Item clicked: ${food.foodTitle} - ID: ${food.foodId} - Type: ${food.foodId.javaClass.simpleName}")                Toast.makeText(context, "Event: ${food.foodTitle}", Toast.LENGTH_SHORT).show()            }        }    }    companion object {        val DIFF_CALLBACK: DiffUtil.ItemCallback<FavoriteFood> =            object : DiffUtil.ItemCallback<FavoriteFood>() {                override fun areItemsTheSame(oldItem: FavoriteFood, newItem: FavoriteFood): Boolean {                    return oldItem.foodTitle == newItem.foodTitle                }                override fun areContentsTheSame(oldItem: FavoriteFood, newItem: FavoriteFood): Boolean {                    return oldItem == newItem                }            }    }}